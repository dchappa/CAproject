{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/animal/animal.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/animal.service.ts","webpack:///./src/app/animal/animal.component.css","webpack:///./src/app/animal/animal.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<p>animal works!</p>\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}!</h1>\\n  <h3>Pick an animal to see it's description!</h3>\\n  <select ng-model=\\\"animal\\\" ng-options=\\\"for animal in animals\\\">\\n</select>\\n\\n  <div class=\\\"ui raised segment\\\">\\n    <h2 class=\\\"ui header\\\">Enter an animal here!</h2>\\n      <form [formGroup]=\\\"animalForm\\\"\\n          (ngSubmit)=\\\"onAdd(animalForm.value)\\\"\\n          class=\\\"ui form\\\" >\\n          <div class=\\\"field\\\">\\n            <label for=\\\"aniInput\\\">Animal Name</label>\\n            <input type=\\\"text\\\" id=\\\"aniInput\\\"\\n           placeholder=\\\"Animal Name\\\"\\n           formControlName=\\\"animalName\\\">\\n           <input type=\\\"button\\\" class=\\\"ui button\\\" value=\\\"{{addBtn}}\\\" formControlName=\\\"addAnimal\\\">\\n           <select>\\n             <option value=\\\"\\\">\\n             <option value=\\\"Red\\\">Red\\n             <option value=\\\"Blue\\\">Blue\\n             <option value=\\\"Green\\\">Green\\n             <option value=\\\"Brown\\\">Brown\\n          </select>\\n          <select>\\n            <option value=\\\"\\\">\\n            <option value=\\\"Small\\\">Small\\n            <option value=\\\"Medium\\\">Medium\\n            <option value=\\\"Large\\\">Large\\n            <option value=\\\"super-sized\\\">Super-Sized\\n          </select>\\n          <input type=\\\"date\\\">\\n         </div>\\n       </form>\\n\\n       <table>\\n           <th>Name</th>\\n           <th>Color</th>\\n           <th>Size</th>\\n           <th>DOB</th>\\n           <tr *ngFor=\\\"let animal of animals; let ind = index\\\">\\n             <td>{{animal.name}}</td>\\n             <td>{{animal.color}}</td>\\n             <td>{{animal.size}}</td>\\n             <td>{{animal.dob}}</td>\\n        </tr>\\n      </table>\\n  </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient } from '@angular/common/http'\nimport { Animal } from './animal/animal.model';\nimport { ANIMALS } from './mock-animals';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimalService {\n\n  constructor(private http: HttpClient) { }\n\n  getAnimals() {\n    console.log(\"getAnimals() from angular callled\");\n    return this.http.get('http://localhost:3000/animals')\n      .pipe(map(res => res),\n            catchError(e => throwError(new Error(e))))\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FuaW1hbC9hbmltYWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Animal } from './animal.model'\nimport { Observable, of } from 'rxjs'\nimport { AnimalService } from '../animal.service';\n\n@Component({\n  selector: 'app-animal',\n  templateUrl: './animal.component.html',\n  styleUrls: ['./animal.component.css']\n})\nexport class AnimalComponent implements OnInit {\n\n  @Input() animals: Animal[];\n\n  constructor(private animalService: AnimalService) { }\n\n  getAnimals() {\n        console.log(this.animalService.getAnimals().subscribe(result => {console.log(result); result}))\n  }\n\n  ngOnInit() {\n    this.getAnimals();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Animal } from './animal/animal.model';\nimport { FormGroup, FormControl, FormBuilder,Validators, FormsModule } from '@angular/forms';\nimport { AnimalService } from './animal.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  animalForm: FormGroup;\n  animalName: FormControl;\n  addAnimal: FormControl;\n  animals;\n\n  constructor(private aniService : AnimalService, private formBuilder : FormBuilder){\n    this.animalForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.minLength(5)]],\n      description: [''],\n      animalName: new FormControl(''),\n      addAnimal: new FormControl(''),\n    });\n\n    this.aniService.getAnimals().subscribe(result => {console.log(result); this.animals = result});\n  }\n  addBtn = \"Add Animal\";\n\n  ngOnInit(){\n    // this.aniService.getAnimals()\n  }\n\n\n  title = 'All about animals';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AnimalComponent } from './animal/animal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AnimalService } from './animal.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnimalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AnimalService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}