{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/animal/animal.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/animal.service.ts","webpack:///./src/app/animal/animal.component.css","webpack:///./src/app/animal/animal.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,yC;;;;;;;;;;;ACAA,kIAAkI,SAAS,uLAAuL,aAAa,oEAAoE,qBAAqB,cAAc,sBAAsB,aAAa,qBAAqB,oBAAoB,oBAAoB,6UAA6U,QAAQ,6eAA6e,OAAO,+OAA+O,MAAM,+bAA+b,aAAa,0BAA0B,cAAc,0BAA0B,aAAa,0BAA0B,YAAY,kHAAkH,SAAS,qEAAqE,YAAY,yjBAAyjB,OAAO,yKAAyK,MAAM,qMAAqM,WAAW,kJAAkJ,YAAY,oIAAoI,QAAQ,8I;;;;;;;;;;;;;;;;;;;;ACA/hH;AAEN;AACM;AACC;AAGkB;AAS9D;IAEE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+BAA+B,CAAC;aAClD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,UAAG,EAAH,CAAG,CAAC,EACf,iEAAU,CAAC,WAAC,IAAI,8DAAU,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAClD,CAAC;IAEH,iCAAS,GAAT,UAAU,MAAM;QACV,IAAM,WAAW,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,eAAe;aACjC,CAAC;SACH,CAAC;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE,MAAM,EAAE,WAAW,CAAC;aACxE,IAAI,CAAC,iEAAU,CAAC,WAAC,IAAI,8DAAU,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACpD,CAAC;IAED,oCAAY,GAAZ,UAAa,QAAQ;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gCAAgC,GAAG,QAAQ,CAAC;aACjE,IAAI,CAAC,iEAAU,CAAC,WAAC,IAAI,8DAAU,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACpD,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM,EAAE,QAAQ;QACzB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,eAAe;aACjC,CAAC;SACH,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,GAAG,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,WAAW,CAAC;aACvF,IAAI,CAAC,iEAAU,CAAC,WAAC,IAAI,8DAAU,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAEpD,CAAC;;gBArCyB,+DAAU;;IAFzB,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,aAAa,CAwCzB;IAAD,oBAAC;CAAA;AAxCyB;;;;;;;;;;;;AChB1B,+DAA+D,2I;;;;;;;;;;;;;;;;;;ACAN;AAGP;AAOlD;IAIE,yBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,oCAAU,GAAV;QACM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,gBAAM,IAAK,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC;IACrG,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;;gBARkC,6DAAa;;IAFvC;QAAR,2DAAK,EAAE;oDAAmB;IAFhB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,oJAAsC;;SAEvC,CAAC;OACW,eAAe,CAc3B;IAAD,sBAAC;CAAA;AAd2B;;;;;;;;;;;;;;;;;;;ACVa;AACc;AAGvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACV7B,+DAA+D,+H;;;;;;;;;;;;;;;;;;;ACAb;AAEuD;AACxD;AAUjD;IAcE,sBAAoB,UAA0B,EAAU,WAAyB;QAAjF,iBAiBC;QAjBmB,eAAU,GAAV,UAAU,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAc;QATjF,UAAK,GAAG,mBAAmB,CAAC;QAC5B,WAAM,GAAG,YAAY,CAAC;QACtB,YAAO,GAAG,MAAM,CAAC;QACjB,WAAM,GAAG,QAAQ,CAAC;QAClB,eAAU,GAAG,SAAS,CAAC;QACvB,cAAS,GAAG,QAAQ,CAAC;QAKnB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,gBAAM,IAAK,KAAI,CAAC,OAAO,GAAG,MAAM,GAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClD,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;IAC3D,CAAC;IAGD,+BAAQ,GAAR;IAEA,CAAC;IAGD,gCAAS,GAAT,UAAU,UAAU;QAApB,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,UAAU,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,UAAU,EAAC,CAAC,CAAC;QAClJ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAAK,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;YAC1I,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAAA,CAAC,EACsB,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACvE,CAAC;IAED,mCAAY,GAAZ,UAAa,UAAU;QAAvB,iBAGC;QAFC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAK,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAC,EACvD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACvE,CAAC;IAED,iCAAU,GAAV,UAAW,MAAM,EAAE,UAAU;QAA7B,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,UAAU,CAAC,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,QAAQ,EAAC,CAAC,CAAC;QAC7I,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,aAAa,CAAC,MAAM,EAAC,SAAS,CAAC,EAApC,CAAoC,EAC9C,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACrF,CAAC;IAED,oCAAa,GAAb,UAAc,MAAM,EAAE,SAAS;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnC,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAC;YACjC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,EAAC;gBACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBACxD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;gBACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;aACpD;SACF;IACH,CAAC;IAED,mCAAY,GAAZ,UAAa,UAAU;QACrB,KAAI,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,EAAC;YAC7B,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;gBACtD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,CAAC;aACzC;SACF;IACH,CAAC;IAED,sCAAe,GAAf,UAAgB,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAC;YACjC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;aACnD;SACF;IACH,CAAC;IAED,uCAAgB,GAAhB,UAAiB,EAAE;QACjB,KAAI,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAC;YACjC,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,EAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;aACpD;SACF;IACH,CAAC;;gBAlFgC,6DAAa;gBAAwB,0DAAW;;IAdtE,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAiGxB;IAAD,mBAAC;CAAA;AAjGwB;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AAEe;AACT;AACa;AACM;AACV;AACP;AAiBjD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,kEAAmB;gBACnB,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,6DAAa,CAAC;YAC1B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACzBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<p>animal works!</p>\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>{{ title }}!</h1>\\n  <h3>Pick an animal to see it's description!</h3>\\n  <select [(ngModel)]=\\\"selectedAnimal\\\">\\n      <option *ngFor=\\\"let animal of animals\\\" [ngValue]=\\\"animal\\\">\\n        {{animal.name}}\\n      </option>\\n  </select>\\n  <p *ngIf=\\\"selectedAnimal\\\">The {{selectedAnimal.name}} is colored {{selectedAnimal.color}}, is sized {{selectedAnimal.size}}, and was born on {{selectedAnimal.dob}}</p>\\n\\n  <div class=\\\"ui container\\\" align=\\\"center\\\">\\n    <h2 class=\\\"ui header\\\">Enter an animal here!</h2>\\n      <form [formGroup]=\\\"animalForm\\\"\\n          (ngSubmit)=\\\"addAnimal(animalForm.value)\\\"\\n          class=\\\"ui form\\\">\\n          <input [disabled]=\\\"!animalForm.valid\\\" type=\\\"submit\\\" class=\\\"ui button\\\" value=\\\"{{addBtn}}\\\">\\n          <div class=\\\"field\\\">\\n            <label for=\\\"aniInput\\\">Animal Name</label>\\n            <input type=\\\"text\\\" id=\\\"aniInput\\\"\\n           placeholder=\\\"Animal Name\\\"\\n           formControlName=\\\"animalName\\\" style=\\\"width: 200px\\\" align=\\\"center\\\">\\n           <label for=\\\"aniInput\\\">Animal Color</label>\\n           <select formControlName=\\\"animalColor\\\" style=\\\"width: 200px\\\" align=\\\"center\\\">\\n             <option *ngFor=\\\"let color of colors\\\" [ngValue]=\\\"color\\\">{{color}}\\n          </select>\\n          <label for=\\\"aniInput\\\">Animal Size</label>\\n          <select formControlName=\\\"animalSize\\\" style=\\\"width: 200px\\\" align=\\\"center\\\">\\n            <option *ngFor=\\\"let size of sizes\\\" [ngValue]=\\\"size\\\">{{size}}\\n          </select>\\n          <label for=\\\"aniInput\\\">Animal DOB</label>\\n          <input type=\\\"date\\\" formControlName=\\\"animalDOB\\\" style=\\\"width: 200px\\\" align=\\\"center\\\">\\n         </div>\\n       </form>\\n\\n       <table style=\\\"ui celled table\\\" align=\\\"center\\\">\\n           <th>Name</th>\\n           <th>Color</th>\\n           <th>Size</th>\\n           <th>DOB</th>\\n           <tr *ngFor=\\\"let animal of animals\\\">\\n             <td>{{animal.name}}</td>\\n             <td>{{animal.color}}</td>\\n             <td>{{animal.size}}</td>\\n             <td>{{animal.dob}}</td>\\n             <td>\\n               <input type=\\\"button\\\" *ngIf=!animal.display class=\\\"ui button\\\" value={{editBtn}} (click)=\\\"onClickOpenForm(animal._id)\\\">\\n               <form id={{animal._id}} *ngIf=animal.display [formGroup]=\\\"editForm\\\"\\n                   (ngSubmit)=\\\"editAnimal(animal, editForm.value)\\\"\\n                   class=\\\"ui form\\\">\\n                   <div class=\\\"field\\\">\\n                     <label for=\\\"editInput\\\">Animal Name</label>\\n                     <input type=\\\"text\\\" id=\\\"editInput\\\"\\n                    placeholder=\\\"Animal Name\\\"\\n                    formControlName=\\\"editName\\\">\\n                    <select formControlName=\\\"editColor\\\">\\n                      <option *ngFor=\\\"let color of colors\\\" [ngValue]=\\\"color\\\">{{color}}\\n                   </select>\\n                   <select formControlName=\\\"editSize\\\">\\n                     <option *ngFor=\\\"let size of sizes\\\" [ngValue]=\\\"size\\\">{{size}}\\n                   </select>\\n                   <input type=\\\"date\\\" formControlName=\\\"editDOB\\\">\\n                  </div>\\n                  <input type=\\\"button\\\" class=\\\"ui button\\\" value={{cancelBtn}} (click)=\\\"onClickCloseForm(animal._id)\\\">\\n                  <input [disabled]=\\\"!editForm.valid\\\" type=\\\"submit\\\" class=\\\"ui button\\\" value=\\\"{{confirmBtn}}\\\">\\n                </form>\\n            </td>\\n            <td>\\n              <input type=\\\"button\\\" class=\\\"ui button\\\" value={{delBtn}} (click)=\\\"deleteAnimal(animal)\\\">\\n           </td>\\n         </tr>\\n      </table>\\n  </div>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Subject, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Animal } from './animal/animal.model';\nimport { ANIMALS } from './mock-animals';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimalService {\n\n  constructor(private http: HttpClient) { }\n\n  getAnimals() {\n    return this.http.get('http://localhost:3000/animals')\n      .pipe(map(res => res),\n            catchError(e => throwError(new Error(e))))\n    }\n\n  addAnimal(animal) {\n        const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'my-auth-token'\n        })\n      };\n    return this.http.post('http://localhost:3000/animals', animal, httpOptions)\n      .pipe(catchError(e => throwError(new Error(e))))\n  }\n\n  deleteAnimal(animalID){\n    console.log(animalID);\n    return this.http.delete('http://localhost:3000/animals/' + animalID)\n      .pipe(catchError(e => throwError(new Error(e))))\n  }\n\n  editAnimal(animal, animalID) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'my-auth-token'\n      })\n    };\n    console.log(animalID);\n    console.log(animal);\n    return this.http.put('http://localhost:3000/animals/' + animal._id, animalID, httpOptions)\n      .pipe(catchError(e => throwError(new Error(e))))\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FuaW1hbC9hbmltYWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Animal } from './animal.model'\nimport { Observable, of } from 'rxjs'\nimport { AnimalService } from '../animal.service';\n\n@Component({\n  selector: 'app-animal',\n  templateUrl: './animal.component.html',\n  styleUrls: ['./animal.component.css']\n})\nexport class AnimalComponent implements OnInit {\n\n  @Input() animals: Animal[];\n\n  constructor(private animalService: AnimalService) { }\n\n  getAnimals() {\n        console.log(this.animalService.getAnimals().subscribe(result => {console.log(result); result}))\n  }\n\n  ngOnInit() {\n    this.getAnimals();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Animal } from './animal/animal.model';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators, FormsModule } from '@angular/forms';\nimport { AnimalService } from './animal.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  animalForm: FormGroup;\n  editForm: FormGroup;\n  openEdit: Boolean;\n  animals;\n  title = 'All about animals';\n  addBtn = \"Add Animal\";\n  editBtn = \"Edit\";\n  delBtn = \"Delete\";\n  confirmBtn = \"Confirm\";\n  cancelBtn = \"Cancel\";\n  colors: Array<String>;\n  sizes: Array<String>;\n\n  constructor(private aniService : AnimalService, private formBuilder : FormBuilder){\n    this.aniService.getAnimals().subscribe(result => {this.animals = result});\n    this.openEdit = false;\n    this.animalForm = this.formBuilder.group({\n      animalName: new FormControl('', Validators.required),\n      animalColor: new FormControl('', Validators.required),\n      animalSize: new FormControl('', Validators.required),\n      animalDOB: new FormControl('', Validators.required),\n    });\n    this.editForm = this.formBuilder.group({\n      editName: new FormControl('', Validators.required),\n      editColor: new FormControl('', Validators.required),\n      editSize: new FormControl('', Validators.required),\n      editDOB: new FormControl('', Validators.required),\n    });\n    this.colors = ['Red', 'Blue', 'Green', 'Yellow'];\n    this.sizes = ['Small', 'Medium', 'Large', 'Super-sized'];\n  }\n\n\n  ngOnInit(){\n\n  }\n\n\n  addAnimal(animalData) {\n    console.log(this.animalForm.status);\n    let animal = JSON.stringify({color: animalData.animalColor, dob: animalData.animalDOB, name: animalData.animalName, size: animalData.animalSize});\n    this.aniService.addAnimal(animal).subscribe(response => {this.animals.push(response); this.animals[this.animals.length-1].display = false;\n    console.log(response)},\n                                                err => console.log(err));\n  }\n\n  deleteAnimal(animalData){\n    this.aniService.deleteAnimal(animalData._id).subscribe(response => {this.delFromArray(animalData);},\n                                                err => console.log(err));\n  }\n\n  editAnimal(animal, animalData){\n    console.log(animal);\n    console.log(animalData);\n    let newAnimal = JSON.stringify({color: animalData.editColor, dob: animalData.editDOB, name: animalData.editName, size: animalData.editSize});\n    this.aniService.editAnimal(animal, newAnimal).subscribe(response => this.editFromArray(animal,newAnimal),\n                                                              err => console.log(err));\n  }\n\n  editFromArray(animal, newAnimal){\n    let parsed = JSON.parse(newAnimal);\n    for(let currAnimal in this.animals){\n      if(this.animals[parseInt(currAnimal)]._id == animal._id){\n        this.animals[parseInt(currAnimal)].color = parsed.color;\n        this.animals[parseInt(currAnimal)].dob = parsed.dob;\n        this.animals[parseInt(currAnimal)].name = parsed.name;\n        this.animals[parseInt(currAnimal)].size = parsed.size;\n        this.animals[parseInt(currAnimal)].display = false;\n      }\n    }\n  }\n\n  delFromArray(animalData){\n    for(let animal in this.animals){\n      if(this.animals[parseInt(animal)]._id == animalData._id){\n        this.animals.splice(parseInt(animal),1);\n      }\n    }\n  }\n\n  onClickOpenForm(id){\n    console.log(id);\n    for(let currAnimal in this.animals){\n      if(this.animals[parseInt(currAnimal)]._id == id){\n        this.animals[parseInt(currAnimal)].display = true;\n      }\n    }\n  }\n\n  onClickCloseForm(id){\n    for(let currAnimal in this.animals){\n      if(this.animals[parseInt(currAnimal)]._id == id){\n        this.animals[parseInt(currAnimal)].display = false;\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AnimalComponent } from './animal/animal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AnimalService } from './animal.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnimalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AnimalService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}